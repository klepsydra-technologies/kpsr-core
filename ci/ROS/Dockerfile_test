FROM kpsr-thirdparties:ROS as thirdparties

# Compile docker
FROM kpsr-core:sys_dep_ubuntu_18.04 as compile_docker

ARG BUILD_ID
LABEL kpsr-core=compile_docker
LABEL BUILD_ID=${BUILD_ID}
LABEL method=ZMQ

WORKDIR /opt

# Internal dependencies
COPY --from=thirdparties /opt/ /opt/
COPY --from=thirdparties /usr/ /usr/

# Klepsydra
COPY . kpsr-core

RUN cd kpsr-core \
    && git submodule update --init \
    && mkdir build \
    && cd build \
    && cmake -DKPSR_WITH_DOXYGEN=true -DKPSR_WITH_DDS=false -DKPSR_WITH_ZMQ=false\
       -DKPSR_TEST_PERFORMANCE=true -DKPSR_WITH_SOCKET=true -DKPSR_WITH_YAML=true\
       -DKPSR_WITH_CODE_METRICS=true -DCMAKE_PREFIX_PATH=/opt/klepsydra/thirdparties\
       -DCMAKE_BUILD_TYPE=Debug ..\
    && make

# Install
FROM compile_docker as compiler_docker_ros
LABEL kpsr-core=install_docker
RUN cd kpsr-core/build/ && make install

RUN cd / \
    && /opt/ros/melodic/setup.sh \
    && mkdir -p kpsr-ros/src \
    && cd kpsr-ros/src \
    && catkin_init_workspace \
    && ln -s ../../kpsr-core/core/modules/ros_mdlw/kpsr_ros_core . \
    && ln -s ../../kpsr-core/serialization/modules/ros_mdlw/kpsr_ros_serialization . \
    && ln -s ../../kpsr-core/code_generator/cpp_testing/tests/kpsr_ros_codegen . \
    && cd .. \
    && catkin_make -DCMAKE_INSTALL_PREFIX=/opt/klepsydra \
    && catkin_make tests
    && catkin_make install


# Clean the image
FROM ubuntu:18.04

COPY --from=install_docker /usr/local/include/klepsydra/ /usr/local/include/klepsydra/
COPY --from=install_docker /usr/local/lib/cmake/klepsydra/ /usr/local/lib/cmake/klepsydra/
COPY --from=install_docker /usr/local/lib/libkpsr* /usr/local/lib/

WORKDIR /opt/
