/****************************************************************************
*
*                           Klepsydra Core Modules
*              Copyright (C) 2019-2020  Klepsydra Technologies GmbH
*                            All Rights Reserved.
*
*  This file is subject to the terms and conditions defined in
*  file 'LICENSE.md', which is part of this source code package.
*
*  NOTICE:  All information contained herein is, and remains the property of Klepsydra
*  Technologies GmbH and its suppliers, if any. The intellectual and technical concepts
*  contained herein are proprietary to Klepsydra Technologies GmbH and its suppliers and
*  may be covered by Swiss and Foreign Patents, patents in process, and are protected by
*  trade secret or copyright law. Dissemination of this information or reproduction of
*  this material is strictly forbidden unless prior written permission is obtained from
*  Klepsydra Technologies GmbH.
*
****************************************************************************/

// This code has been automatically generated, manual modification might be inadvertently overridden.

#ifndef TEMPERATURE_H_
#define TEMPERATURE_H_


// Include section.


// Klepsydra generated event class.
class Temperature {
public:
   // Autogenerated Enum.
   enum Units {
      CELSIUS = 0,
      FAHRENHEIT,
      KELVIN
   };

   // Default constructor.
   Temperature() {}

   // Main constructor.
   Temperature(
      float value,
      Units units)
      : value(value)
      , units(units)
   {}

   // Clone constructor. Needed by klepsydra core APIs.
   Temperature(const Temperature & that)
      : value(that.value)
      , units(that.units)
   {}

   // Clone method. Needed by klepsydra core APIs.
   void clone(const Temperature & that) {
      this->value = that.value;
      this->units = that.units;
   }

   // List of fields.
   float value;
   Units units;
};
#endif
