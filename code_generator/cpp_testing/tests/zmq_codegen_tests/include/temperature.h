/*
 * Copyright 2023 Klepsydra Technologies AG
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


// This code has been automatically generated, manual modification might be inadvertently overridden.

#ifndef TEMPERATURE_H_
#define TEMPERATURE_H_

// Include section.

// Klepsydra generated event class.
class Temperature
{
public:
    // Autogenerated Enum.
    enum Units { CELSIUS = 0, FAHRENHEIT, KELVIN };

    // Default constructor.
    Temperature() {}

    // Main constructor.
    Temperature(float value, Units units)
        : value(value)
        , units(units)
    {}

    // Clone constructor. Needed by klepsydra core APIs.
    Temperature(const Temperature &that)
        : value(that.value)
        , units(that.units)
    {}

    // Clone method. Needed by klepsydra core APIs.
    void clone(const Temperature &that)
    {
        this->value = that.value;
        this->units = that.units;
    }

    // List of fields.
    float value;
    Units units;
};
#endif
